{"version":3,"sources":["context/PokemonContext.tsx","components/layout/Wrapper.tsx","assets/pokeball.svg","components/layout/HomeHeader.tsx","components/ui/Spinner.tsx","helpers/contrast-color.ts","components/Pokemon/PokemonCard.tsx","components/Pokemon/PokemonList.tsx","pages/HomePage.tsx","components/Pokemon/PokemonImage.tsx","components/Pokemon/PokemonTopClipped.tsx","components/Pokemon/PokemonHeader.tsx","components/Pokemon/PokemonTop.tsx","helpers/pokemon.ts","components/Pokemon/PokemonTypeList.tsx","components/Pokemon/PokemonStats.tsx","components/Pokemon/PokemonDetails.tsx","pages/PokemonPage.tsx","hooks/useBasicValues.ts","pages/SearchPage.tsx","routers/AppRouter.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["PokemonContext","createContext","PokemonProvider","children","useState","pokemonList","setPokemonList","page","setPage","nextPageRef","useRef","getPokemon","useCallback","a","fetch","resp","json","data","current","next","pokemon","results","nextPage","useEffect","currentPokemon","setCurrentPokemon","getPokemonById","id","Provider","value","WrapperStyled","styled","div","Wrapper","HomeHeaderStyled","header","HomeHeader","src","pokeball","alt","spin","keyframes","SpinnerStyled","props","className","align","Spinner","forwardRef","ref","role","aria-label","rgbToYIQ","r","g","b","hexToRgb","hex","undefined","result","exec","parseInt","contrast","colorHex","threshold","rgb","PokemonCardStyled","li","backgroundColor","isLoading","PokemonCard","pokemonId","name","artworkUrl","usePalette","loading","error","isImageLoading","setImageLoading","history","useHistory","muted","onClick","push","bgc","onLoad","PokemonListStyled","ul","PokemonList","useContext","spinnerRef","observer","window","IntersectionObserver","entities","isIntersecting","root","rootMargin","observe","map","url","split","HomePage","PokemonImageStyled","img","attrs","PokemonImage","image","PokemonTopCLippedStyled","PokemonTopClipped","PokemonHeaderStyled","PokemonHeader","length","replace","goBack","size","color","PokemonTopStyled","PokemonTop","useLocation","pathname","title","pokemonTypeColors","Map","pokemonStats","PokemonTypeListStyled","PokemonTypeList","typeList","type","style","get","PokemonStatsStyled","PokemonStats","stats","stat","base_stat","width","PokemonDetailsStyled","PokemonDetails","types","order","height","weight","PokemonPageStyled","PokemonPage","match","location","params","state","useBasicValues","setIsLoading","then","SearchPage","AppRouter","basename","path","exact","component","to","App","Boolean","hostname","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.4bafb7a6.chunk.js","sourcesContent":["import {\n\tcreateContext,\n\tReactNode,\n\tuseCallback,\n\tuseEffect,\n\tuseRef,\n\tuseState,\n} from 'react';\nimport { PokemonInfo } from '../interfaces/pokemon-info.interface';\nimport {\n\tResourceGeneralResponse,\n\tResult,\n} from '../interfaces/resource-general-response.interface';\n\ninterface PokemonContextInterface {\n\tpokemonList: Result[];\n\tpage: string;\n\tcurrentPokemon: PokemonInfo;\n\tgetPokemon(): void;\n\tsetPage(): void;\n\tgetPokemonById(id: number): Promise<void>;\n}\n\nexport const PokemonContext = createContext<PokemonContextInterface>(\n\t{} as PokemonContextInterface\n);\n\nexport const PokemonProvider = ({ children }: { children: ReactNode }) => {\n\tconst [pokemonList, setPokemonList] = useState<Result[]>([]);\n\tconst [page, setPage] = useState('https://pokeapi.co/api/v2/pokemon');\n\n\tconst nextPageRef = useRef<string | null>(null);\n\n\tconst getPokemon = useCallback(async () => {\n\t\tconst resp = await fetch(page);\n\t\tconst data: ResourceGeneralResponse = await resp.json();\n\t\tnextPageRef.current = data.next;\n\t\tsetPokemonList((pokemon) => [...pokemon, ...data.results]);\n\t}, [page]);\n\n\tconst nextPage = useCallback(() => setPage(nextPageRef.current || ''), []);\n\n\tuseEffect(() => {\n\t\tif (!page) return;\n\t\tgetPokemon();\n\t}, [page, getPokemon]);\n\n\tconst [currentPokemon, setCurrentPokemon] = useState({} as PokemonInfo);\n\n\tconst getPokemonById = useCallback(async (id: number) => {\n\t\tconst resp = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);\n\n\t\tconst data: PokemonInfo = await resp.json();\n\n\t\tsetCurrentPokemon(data);\n\t}, []);\n\n\treturn (\n\t\t<PokemonContext.Provider\n\t\t\tvalue={{\n\t\t\t\tpokemonList,\n\t\t\t\tpage,\n\t\t\t\tcurrentPokemon,\n\t\t\t\tgetPokemon,\n\t\t\t\tsetPage: nextPage,\n\t\t\t\tgetPokemonById,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</PokemonContext.Provider>\n\t);\n};\n","import { PropsWithChildren } from 'react';\nimport styled from 'styled-components';\n\nconst WrapperStyled = styled.div`\n\tmargin: 0 auto;\n\tmax-width: 120rem;\n\tpadding: 0 2rem;\n\twidth: 100%;\n`;\n\nfunction Wrapper({ children }: PropsWithChildren<{}>) {\n\treturn <WrapperStyled>{children}</WrapperStyled>;\n}\n\nexport default Wrapper;\n","export default __webpack_public_path__ + \"static/media/pokeball.0f112db8.svg\";","import styled from 'styled-components';\nimport Wrapper from './Wrapper';\nimport pokeball from '../../assets/pokeball.svg';\n\nconst HomeHeaderStyled = styled.header`\n\tposition: relative;\n\theight: 20rem;\n\tdisplay: flex;\n\talign-items: center;\n\timg {\n\t\tdisplay: block;\n\t\theight: 24.8rem;\n\t\twidth: 24.8rem;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: -1rem;\n\t\tz-index: -1;\n\t}\n\th1 {\n\t\tfont-size: 3rem;\n\t\tletter-spacing: 1px;\n\t}\n`;\n\nfunction HomeHeader() {\n\treturn (\n\t\t<HomeHeaderStyled>\n\t\t\t<Wrapper>\n\t\t\t\t<img src={pokeball} alt=\"pokeball\" />\n\t\t\t\t<h1>Pokedex</h1>\n\t\t\t</Wrapper>\n\t\t</HomeHeaderStyled>\n\t);\n}\n\nexport default HomeHeader;\n","import { forwardRef } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\ninterface SpinnerProps {\n\talign?: string;\n\tclassName?: string;\n}\n\nconst spin = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst SpinnerStyled = styled.div<SpinnerProps>`\n\tborder-top: 0.2rem solid #fff;\n\tborder-radius: 50%;\n\theight: 2.5rem;\n\tdisplay: ${(props) => (props.className === 'visible' ? 'block' : 'none')};\n\twidth: 2.5rem;\n\tmargin-left: ${(props) =>\n\t\tprops.align === 'right' || props.align === 'center' ? 'auto' : 0};\n\tmargin-right: ${(props) =>\n\t\tprops.align === 'left' || props.align === 'center' ? 'auto' : 0};\n\tanimation: ${spin} 1s linear infinite;\n`;\n\nconst Spinner = forwardRef<HTMLDivElement, SpinnerProps>(\n\t({ align, className = 'visible' }: SpinnerProps, ref) => {\n\t\treturn (\n\t\t\t<div ref={ref} role=\"status\" aria-label=\"Loading...\">\n\t\t\t\t<SpinnerStyled className={className} align={align} />\n\t\t\t</div>\n\t\t);\n\t}\n);\n\nexport default Spinner;\n","interface RGB {\n\tr: number;\n\tg: number;\n\tb: number;\n}\nfunction rgbToYIQ({ r, g, b }: RGB): number {\n\treturn (r * 299 + g * 587 + b * 114) / 1000;\n}\nfunction hexToRgb(hex: string): RGB | undefined {\n\tif (!hex || hex === undefined || hex === '') {\n\t\treturn undefined;\n\t}\n\n\tconst result: RegExpExecArray | null = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(\n\t\thex\n\t);\n\n\treturn result\n\t\t? {\n\t\t\t\tr: parseInt(result[1], 16),\n\t\t\t\tg: parseInt(result[2], 16),\n\t\t\t\tb: parseInt(result[3], 16),\n\t\t  }\n\t\t: undefined;\n}\n\nexport function contrast(\n\tcolorHex: string | undefined,\n\tthreshold: number = 128\n): string {\n\tif (colorHex === undefined) {\n\t\treturn '#000';\n\t}\n\n\tconst rgb: RGB | undefined = hexToRgb(colorHex);\n\n\tif (rgb === undefined) {\n\t\treturn '#000';\n\t}\n\n\treturn rgbToYIQ(rgb) >= threshold ? '#000' : '#fff';\n}\n","import { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport styled from 'styled-components';\nimport { usePalette } from 'react-palette';\nimport { contrast } from '../../helpers/contrast-color';\nimport Spinner from '../ui/Spinner';\n\ninterface PokemonCardProps {\n\tpokemonId: number;\n\tname: string;\n}\n\ninterface PokemonCardStyledProps {\n\tbackgroundColor: string | undefined;\n\tisLoading: boolean;\n}\n\nconst PokemonCardStyled = styled.li<PokemonCardStyledProps>`\n\tbackground-color: ${(props) => props.backgroundColor};\n\tborder-radius: 0.5rem;\n\tcursor: pointer;\n\theight: ${(props) => (props.isLoading ? '10rem' : '20rem')};\n\tpadding: 1.5rem 0.4rem;\n\tpadding-right: ${(props) => (props.isLoading ? '1rem' : '0.4rem')};\n\twidth: 100%;\n\ttransition: background-color 0.5s ease, height 0.5s ease;\n\ta {\n\t\ttext-decoration: none;\n\t}\n\tp {\n\t\tcolor: ${(props) => contrast(props.backgroundColor)};\n\t\tfont-size: 2rem;\n\t\tfont-weight: 500;\n\t\tletter-spacing: 0.5px;\n\t\tmargin: 0 0 0rem 1rem;\n\t\ttext-transform: capitalize;\n\t}\n\timg {\n\t\tdisplay: block;\n\t\theight: 100%;\n\t\tmargin-left: auto;\n\t\tmax-width: 100%;\n\t\tobject-fit: cover;\n\t\ttransform: ${(props) =>\n\t\t\tprops.isLoading ? 'scale3d(0, 0, 0)' : 'scale3d(1, 1, 1)'};\n\t\ttransition: transform 0.3s 0.5s ease;\n\t}\n\t&:hover img {\n\t\ttransform: translate3d(-1.5rem, 0, 0);\n\t\ttransition-delay: 0s;\n\t}\n`;\n\nfunction PokemonCard({ pokemonId, name }: PokemonCardProps) {\n\tconst artworkUrl: string = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pokemonId}.png`;\n\n\tconst { data, loading, error } = usePalette(artworkUrl);\n\n\tconst [isImageLoading, setImageLoading] = useState(true);\n\n\tconst history = useHistory();\n\n\tconst handlePokemonPage = () => {\n\t\thistory.push(`/pokemon/${pokemonId}`, {\n\t\t\tname,\n\t\t\tbgc: data.muted,\n\t\t\tartworkUrl,\n\t\t});\n\t};\n\n\treturn (\n\t\t<PokemonCardStyled\n\t\t\tbackgroundColor={data.muted || 'gray'}\n\t\t\tisLoading={isImageLoading}\n\t\t\tonClick={handlePokemonPage}\n\t\t>\n\t\t\t<p>{name}</p>\n\t\t\t{loading ? (\n\t\t\t\t<Spinner align=\"right\" />\n\t\t\t) : !loading && error ? (\n\t\t\t\t<p>Image not found</p>\n\t\t\t) : (\n\t\t\t\t<img\n\t\t\t\t\tsrc={artworkUrl}\n\t\t\t\t\talt=\"Pokémon\"\n\t\t\t\t\tonLoad={() => {\n\t\t\t\t\t\tsetImageLoading(false);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</PokemonCardStyled>\n\t);\n}\n\nexport default PokemonCard;\n","import { useContext, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { Result } from '../../interfaces/resource-general-response.interface';\nimport { PokemonContext } from '../../context/PokemonContext';\nimport Wrapper from '../layout/Wrapper';\nimport Spinner from '../ui/Spinner';\nimport PokemonCard from './PokemonCard';\n\nconst PokemonListStyled = styled.ul`\n\tlist-style: none;\n\tmargin: 0;\n\tmargin-bottom: 2rem;\n\tpadding: 0;\n\tdisplay: grid;\n\tgrid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));\n\tgrid-gap: 2rem 0.6rem;\n`;\n\nfunction PokemonList() {\n\tconst { pokemonList, setPage, page } = useContext(PokemonContext);\n\n\tconst spinnerRef = useRef<HTMLDivElement>(null);\n\n\tuseEffect(() => {\n\t\tconst handleObserver = (\n\t\t\tentities: IntersectionObserverEntry[],\n\t\t\tobserver: IntersectionObserver\n\t\t) => {\n\t\t\tconst target = entities[0];\n\t\t\tif (target.isIntersecting) {\n\t\t\t\tsetPage();\n\t\t\t}\n\t\t};\n\t\tconst options = {\n\t\t\troot: null,\n\t\t\trootMargin: '10px',\n\t\t\tthreshold: 1.0,\n\t\t};\n\n\t\tconst observer = new window.IntersectionObserver(\n\t\t\thandleObserver,\n\t\t\toptions\n\t\t);\n\t\tif (spinnerRef.current) {\n\t\t\tobserver.observe(spinnerRef.current);\n\t\t}\n\t}, [setPage]);\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<PokemonListStyled>\n\t\t\t\t{pokemonList.map(({ name, url }: Result) => (\n\t\t\t\t\t<PokemonCard\n\t\t\t\t\t\tkey={name}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tpokemonId={+url.split('/')[6]}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</PokemonListStyled>\n\t\t\t<Spinner\n\t\t\t\tref={spinnerRef}\n\t\t\t\talign=\"center\"\n\t\t\t\tclassName={page ? 'visible' : 'hidden'}\n\t\t\t/>\n\t\t</Wrapper>\n\t);\n}\n\nexport default PokemonList;\n","import HomeHeader from '../components/layout/HomeHeader';\nimport PokemonList from '../components/Pokemon/PokemonList';\n\nfunction HomePage() {\n\treturn (\n\t\t<>\n\t\t\t<HomeHeader />\n\t\t\t<PokemonList />\n\t\t</>\n\t);\n}\n\nexport default HomePage;\n","import styled from 'styled-components';\n\ninterface PokemonImageProps {\n\timage: string;\n}\n\nconst PokemonImageStyled = styled.img.attrs((props) => ({\n\tsrc: props.src,\n\talt: 'Pokemon',\n}))`\n\tdisplay: block;\n\theight: 30rem;\n\tmargin: 0 auto;\n\tobject-fit: contain;\n\tposition: relative;\n\twidth: 30rem;\n`;\n\nfunction PokemonImage({ image }: PokemonImageProps) {\n\treturn <PokemonImageStyled src={image} />;\n}\n\nexport default PokemonImage;\n","import styled from 'styled-components';\n\ninterface PokemonTopProps {\n\tbgc: string;\n}\n\nconst PokemonTopCLippedStyled = styled.div<PokemonTopProps>`\n\tbackground-color: ${(props) => props.bgc};\n\theight: 100%;\n\twidth: 100%;\n\tclip-path: polygon(0% 0%, 100% 0%, 100% 45%, 0% 100%);\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\ttransition: background-color 0.5s ease;\n`;\n\nfunction PokemonTopClipped({ bgc }: PokemonTopProps) {\n\treturn <PokemonTopCLippedStyled bgc={bgc} />;\n}\n\nexport default PokemonTopClipped;\n","import styled from 'styled-components';\nimport { ChevronLeft } from 'react-feather';\nimport { useHistory } from 'react-router';\n\ninterface PokemonHeaderProps {\n\tid: number;\n}\n\nconst PokemonHeaderStyled = styled.header`\n\tpadding: 1.5rem 2rem;\n\tposition: relative;\n\tz-index: 1;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tbutton {\n\t\tbackground: none;\n\t\tborder: none;\n\t\tcolor: inherit;\n\t\tcursor: pointer;\n\t\tmargin: 0;\n\t\tpadding: 0.5rem;\n\t\tdisplay: inline-flex;\n\t\talign-items: center;\n\t\t&:focus {\n\t\t\toutline: none;\n\t\t}\n\t}\n\tspan {\n\t\tfont-size: 2rem;\n\t\tfont-weight: 900;\n\t\tletter-spacing: 0.3px;\n\t\tmargin-left: -4rem;\n\t}\n`;\n\nfunction PokemonHeader({ id }: PokemonHeaderProps) {\n\tconst history = useHistory();\n\n\tconst handleGoBack = () => {\n\t\tif (history.length === 2) {\n\t\t\treturn history.replace('/');\n\t\t}\n\t\thistory.goBack();\n\t};\n\n\treturn (\n\t\t<PokemonHeaderStyled>\n\t\t\t<button onClick={handleGoBack}>\n\t\t\t\t<ChevronLeft size={32} color=\"currentColor\" />\n\t\t\t</button>\n\t\t\t<span>#{id < 10 ? '00' + id : id < 100 ? '0' + id : id}</span>\n\t\t\t{/* Div vacío para centrar el span */}\n\t\t\t<div />\n\t\t</PokemonHeaderStyled>\n\t);\n}\n\nexport default PokemonHeader;\n","import { ReactNode } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport styled from 'styled-components';\nimport { ArrowLeft, ArrowRight } from 'react-feather';\n\ninterface PokemonTopProps {\n\tchildren: ReactNode;\n\tcolor: string;\n}\n\nconst PokemonTopStyled = styled.div<{ color: string }>`\n\tcolor: ${(props) => props.color};\n\theight: 35rem;\n\tposition: relative;\n\ttranstion: color 0.5s ease;\n\t> button {\n\t\tbackground: rgba(255, 255, 255, 0.45);\n\t\tborder: none;\n\t\tborder-radius: 50%;\n\t\tcolor: #000;\n\t\tcursor: pointer;\n\t\theight: 3.6rem;\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\twidth: 3.6rem;\n\t\tposition: absolute;\n\t\ttop: calc(50% - 1.8rem);\n\t\tz-index: 1;\n\t\ttransition: transform 0.3s ease;\n\t\t&:first-child {\n\t\t\tleft: 1rem;\n\t\t\t&:hover {\n\t\t\t\ttransform: translateX(-0.5rem);\n\t\t\t}\n\t\t}\n\t\t&:last-child {\n\t\t\tright: 1rem;\n\t\t\t&:hover {\n\t\t\t\ttransform: translateX(0.5rem);\n\t\t\t}\n\t\t}\n\t}\n`;\n\nfunction PokemonTop({ children, color }: PokemonTopProps) {\n\tconst history = useHistory();\n\tconst location = useLocation();\n\tconst id = +location.pathname.split('/')[2];\n\n\treturn (\n\t\t<PokemonTopStyled color={color}>\n\t\t\t<button\n\t\t\t\ttitle=\"Prev\"\n\t\t\t\tonClick={() => history.push(`/pokemon/${id - 1}`)}\n\t\t\t>\n\t\t\t\t<ArrowLeft size={24} color=\"currentColor\" />\n\t\t\t</button>\n\t\t\t{children}\n\t\t\t<button title=\"Next\">\n\t\t\t\t<ArrowRight\n\t\t\t\t\tsize={24}\n\t\t\t\t\tcolor=\"currentColor\"\n\t\t\t\t\tonClick={() => history.push(`/pokemon/${id + 1}`)}\n\t\t\t\t/>\n\t\t\t</button>\n\t\t</PokemonTopStyled>\n\t);\n}\n\nexport default PokemonTop;\n","export const pokemonTypeColors = new Map<string, string>([\n\t['normal', '#A8A77A'],\n\t['fire', '#EE8130'],\n\t['water', '#6390F0'],\n\t['electric', '#F7D02C'],\n\t['grass', '#7AC74C'],\n\t['ice', '#96D9D6'],\n\t['fighting', '#C22E28'],\n\t['poison', '#A33EA1'],\n\t['ground', '#E2BF65'],\n\t['flying', '#A98FF3'],\n\t['psychic', '#F95587'],\n\t['bug', '#A6B91A'],\n\t['rock', '#B6A136'],\n\t['ghost', '#735797'],\n\t['dragon', '#6F35FC'],\n\t['dark', '#705746'],\n\t['steel', '#B7B7CE'],\n\t['fairy', '#D685AD'],\n]);\n\nexport const pokemonStats = new Map<string, string>([\n\t['hp', 'HP'],\n\t['attack', 'Attack'],\n\t['defense', 'Defense'],\n\t['special-attack', 'Sp. Atk'],\n\t['special-defense', 'Sp. Def'],\n\t['speed', 'Speed'],\n]);\n","import styled from 'styled-components';\nimport { pokemonTypeColors } from '../../helpers/pokemon';\nimport { Type } from '../../interfaces/pokemon-info.interface';\n\nconst PokemonTypeListStyled = styled.ul`\n\tlist-style: none;\n\tmargin: 0;\n\tpadding: 0;\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tjustify-content: space-around;\n\tli {\n\t\tflex: 0.45;\n\t\tborder-radius: 2rem;\n\t\tpadding: 0.8rem;\n\t\ttext-align: center;\n\t\tuser-select: none;\n\t\ttext-transform: capitalize;\n\t}\n`;\n\nfunction PokemonTypeList({ typeList }: { typeList: Type[] }) {\n\treturn (\n\t\t<PokemonTypeListStyled>\n\t\t\t{typeList.map((type) => (\n\t\t\t\t<li\n\t\t\t\t\tkey={type.type.name}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: pokemonTypeColors.get(type.type.name),\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{type.type.name}\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</PokemonTypeListStyled>\n\t);\n}\n\nexport default PokemonTypeList;\n","import styled from 'styled-components';\nimport { pokemonStats } from '../../helpers/pokemon';\nimport { Stat } from '../../interfaces/pokemon-info.interface';\n\ninterface PokemonStatsProps {\n\tstats: Stat[];\n}\n\nconst PokemonStatsStyled = styled.div`\n\th2 {\n\t\ttext-align: center;\n\t}\n\tul {\n\t\tlist-style: none;\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n\tli {\n\t\tmargin-bottom: 2rem;\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 35% 1fr;\n\t\tgap: 2rem;\n\t\talign-items: center;\n\t\tdiv:first-child {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: space-between;\n\t\t}\n\t\tdiv:last-child {\n\t\t\tbackground-color: #f4f5f4;\n\t\t\tborder-radius: 0.4rem;\n\t\t\theight: 0.4rem;\n      overflow: hidden;\n\t\t\tdiv {\n\t\t\t\tborder-radius: 0.4rem;\n\t\t\t\twidth: 0;\n\t\t\t\ttransition: width 0.3s ease;\n\t\t\t}\n\t\t}\n\t}\n`;\n\nfunction PokemonStats({ stats }: PokemonStatsProps) {\n\treturn (\n\t\t<PokemonStatsStyled>\n\t\t\t<h2>Base Stats</h2>\n\t\t\t<ul>\n\t\t\t\t{stats.map((stat) => (\n\t\t\t\t\t<li key={stat.stat.name}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>{pokemonStats.get(stat.stat.name)}</span>{' '}\n\t\t\t\t\t\t\t{stat.base_stat}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackgroundColor:\n\t\t\t\t\t\t\t\t\t\tstat.base_stat < 50\n\t\t\t\t\t\t\t\t\t\t\t? '#FB6C6C'\n\t\t\t\t\t\t\t\t\t\t\t: '#4BC07A',\n\t\t\t\t\t\t\t\t\twidth: `${stat.base_stat}%`,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</PokemonStatsStyled>\n\t);\n}\n\nexport default PokemonStats;\n","// import { useState } from 'react';\nimport styled from 'styled-components';\nimport Wrapper from '../layout/Wrapper';\nimport PokemonTypeList from './PokemonTypeList';\nimport PokemonStats from './PokemonStats';\nimport { PokemonInfo } from '../../interfaces/pokemon-info.interface';\n\ninterface PokemonDetailsProps {\n\tpokemon: PokemonInfo;\n}\n\nconst PokemonDetailsStyled = styled.div`\n\tcolor: #fff;\n\t> div:first-of-type {\n\t\tmargin-top: 3rem;\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(3, 1fr);\n\t\tdiv {\n\t\t\ttext-align: center;\n\t\t}\n\t\tp {\n\t\t\tfont-size: 3rem;\n\t\t\tfont-weight: 700;\n\t\t\tmargin: 0;\n\t\t\tspan {\n\t\t\t\tfont-size: 1.8rem;\n\t\t\t}\n\t\t}\n\t}\n`;\n\nfunction PokemonDetails({ pokemon }: PokemonDetailsProps) {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<PokemonDetailsStyled>\n\t\t\t\t<PokemonTypeList typeList={pokemon.types} />\n\t\t\t\t<div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>{pokemon.order}</p>\n\t\t\t\t\t\t<span>Order</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{/* decimeter / 10 = meter */}\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{pokemon.height / 10} <span>M</span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<span>Height</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{/* hectogram / 10 = kilogram */}\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{pokemon.weight / 10} <span>KG</span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<span>Weight</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<PokemonStats stats={pokemon.stats} />\n\t\t\t</PokemonDetailsStyled>\n\t\t</Wrapper>\n\t);\n}\n\nexport default PokemonDetails;\n","import { useContext, useEffect, useState } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport styled from 'styled-components';\nimport {\n\tPokemonPageParams,\n\tLocationState,\n} from '../interfaces/router.interface';\nimport { useBasicValues } from '../hooks/useBasicValues';\nimport { contrast } from '../helpers/contrast-color';\nimport PokemonImage from '../components/Pokemon/PokemonImage';\nimport PokemonTopClipped from '../components/Pokemon/PokemonTopClipped';\nimport PokemonHeader from '../components/Pokemon/PokemonHeader';\nimport PokemonTop from '../components/Pokemon/PokemonTop';\nimport PokemonDetails from '../components/Pokemon/PokemonDetails';\nimport Spinner from '../components/ui/Spinner';\nimport { PokemonContext } from '../context/PokemonContext';\n\nconst PokemonPageStyled = styled.div`\n\th1 {\n\t\tfont-size: 3.6rem;\n\t\tletter-spacing: 1.5px;\n\t\tmargin-top: 4rem;\n\t\ttext-align: center;\n\t\ttext-transform: capitalize;\n\t}\n`;\n\nfunction PokemonPage({\n\tmatch,\n\tlocation,\n}: RouteComponentProps<PokemonPageParams, {}, LocationState>) {\n\tconst { id } = match.params;\n\tconst { name, bgc, artworkUrl } = useBasicValues(location.state, id);\n\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tconst { getPokemonById, currentPokemon } = useContext(PokemonContext);\n\n\tuseEffect(() => {\n\t\tgetPokemonById(+id).then(() => setIsLoading(false));\n\t}, [getPokemonById, id]);\n\n\treturn (\n\t\t<PokemonPageStyled>\n\t\t\t<PokemonTop color={contrast(bgc)}>\n\t\t\t\t<PokemonHeader id={+id} />\n\t\t\t\t<PokemonTopClipped bgc={bgc} />\n\t\t\t\t<PokemonImage image={artworkUrl} />\n\t\t\t</PokemonTop>\n\t\t\t<h1>{name || currentPokemon.name}</h1>\n\t\t\t{isLoading ? (\n\t\t\t\t<Spinner align=\"center\" />\n\t\t\t) : (\n\t\t\t\t<PokemonDetails pokemon={currentPokemon} />\n\t\t\t)}\n\t\t</PokemonPageStyled>\n\t);\n}\n\nexport default PokemonPage;\n","import { usePalette } from 'react-palette';\nimport { LocationState } from '../interfaces/router.interface';\n\nexport function useBasicValues(state: LocationState, id: string) {\n\tconst artworkUrl = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`;\n\n\tconst { data } = usePalette(artworkUrl);\n\n\tif (state) return state;\n\treturn { name: null, artworkUrl, bgc: data.muted || 'gray' };\n}\n","function SearchPage() {\n\treturn (\n\t\t<div>\n\t\t\t<h1>Search Page</h1>\n\t\t</div>\n\t);\n}\n\nexport default SearchPage;\n","import {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n\tRedirect,\n} from 'react-router-dom';\nimport HomePage from '../pages/HomePage';\nimport PokemonPage from '../pages/PokemonPage';\nimport SearchPage from '../pages/SearchPage';\n\nfunction AppRouter() {\n\treturn (\n\t\t<Router basename=\"/pokemon-app\">\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact={true} component={HomePage} />\n\t\t\t\t<Route path=\"/search\" exact={true} component={SearchPage} />\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/pokemon/:id\"\n\t\t\t\t\texact={true}\n\t\t\t\t\tcomponent={PokemonPage}\n\t\t\t\t/>\n\t\t\t\t<Redirect to=\"/\" />\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n\nexport default AppRouter;\n","import { PokemonProvider } from './context/PokemonContext';\nimport AppRouter from './routers/AppRouter';\n\nfunction App() {\n\treturn (\n\t\t<PokemonProvider>\n\t\t\t<AppRouter />\n\t\t</PokemonProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}